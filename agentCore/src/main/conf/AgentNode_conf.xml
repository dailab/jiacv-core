<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- Generic application context definition. -->
<beans>


<!-- ------------- --
  -- The default AgentNode Spring configuration --
  -- provides an empty platform definition with JMX support --
  -- the platform bean may be set as parent in any other platfom definitions if you want to make use of
  -- other possible properties are:
     Agents - contains a List of Agents (see xxx for examples) (interface IAgent)
     EmbeddedBroker - sets an JmsBrokerAMQ (maybe we can introduce a switch wich turns on embedded broker stuff or use a bean for this to be configurable or something)
     BeanName - don't know why this can be set here
     AgentNodeBeans - sets a list of AgentNodes (??? what's the difference to agents) (interface ILifecycle)
     ServiceDirectory - sets the ServiceDirectory
     LoggingConfig - sets the Logging configuration (i assume this is the path to a log4j configuration file!!! doc doesn't say anything)
     AuthorizationPolicyFilename - sets the file for the java security policy property and activates the security manager
     enableManagement - not yet implemented
  -- ------------- -->
  <bean name="PlatformWithJMX" class="de.dailab.jiactng.agentcore.SimpleAgentNode" abstract="true">
   <property name="jmxConnectors">
     <set>
       <map>
         <entry key="protocol" value="rmi"/>
         <entry key="registryPort" value="9999"/>
       </map>
     </set>
   </property>
  </bean>


<!-- ------------- --
  -- The default AgentNode Spring configuration --
  -- provides an empty platform definition without JMX support --
  -- the platform bean may be set as parent in any other platfom definitions 
  -- ------------- -->
  <bean name="Platform" class="de.dailab.jiactng.agentcore.SimpleAgentNode" abstract="true">
  </bean>
    
</beans>

