<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- Generic application context definition. -->
<beans>
   <!--
      ###########
      # Imports #
      ###########
      
      1. get the abstract agent bean definitions
   -->
   <import resource="classpath:de/dailab/jiactng/agentcore/conf/AgentBeans.xml" />

   <!--
      ###################################
      # Template for a Simple TNG-Agent #
      ###################################
      
      contains defaults properties for memory and lifecycle beans
      this template should be inherited when declaring other agents
      possible properties are
      * AgentBeans: a list of AgentBeans this agent will contain (components of the agent)
      * owner: sets the owner of this agent, e.g. the platform provider. needed for usermanagement
      * BeanExecutionTimeout: sets the timeout for the execution of this agent. only relevant for certain execution types (needs more documentation here about the proper context)
   -->
   <bean name="SimpleAgent" class="de.dailab.jiactng.agentcore.Agent" abstract="true">
      <property name="memory" ref="Memory" />
      <property name="execution" ref="SimpleExecutionCycle" />
      <property name="executionInterval" value="10"/>
   </bean>

   <bean name="NonBlockingAgent" parent="SimpleAgent" abstract="true">
      <property name="execution" ref="NonBlockingExecutionCycle" />
   </bean>

   <bean name="SimpleAgentWithCommunication" parent="SimpleAgent" abstract="true">
      <property name="agentBeans">
         <list>
            <ref bean="CommunicationBean" />
         </list>
      </property>
   </bean>

   <bean name="NonBlockingAgentWithCommunication" parent="SimpleAgentWithCommunication" abstract="true">
      <property name="execution" ref="NonBlockingExecutionCycle" />
   </bean>
</beans>

