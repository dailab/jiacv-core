<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- Generic application context definition. -->
<beans>
	<import resource="classpath:de/dailab/jiactng/agentcore/conf/JMSMessaging.xml" />
   <!--
      # The default AgentNode configuration
      # provides an empty platform definition with JMX support using RMI without registry
      # this platform bean may be set as parent in any other platfom definitions if you want to make use of inheritance
      # other possible properties are:
      * Agents: contains a List of Agents (interface IAgent)
      * EmbeddedBroker: sets an JmsBrokerAMQ (maybe we can introduce a switch wich turns on embedded broker stuff or use a bean for this to be configurable or something) see JMSMessaging.xml for more documentation
      * AgentNodeBeans: a list of AgentNodeBeans
      * ServiceDirectory: sets the ServiceDirectory
      * LoggingConfig: sets the Logging configuration !needs more documentation here!
      * AuthorizationPolicyFilename: sets the file for the java security policy property and activates the security manager
   -->
   <bean name="PlatformWithJMX" class="de.dailab.jiactng.agentcore.SimpleAgentNode" abstract="true">
      <property name="jmxConnectors">
         <set>
            <map>
               <entry key="protocol" value="rmi" />
            </map>
         </set>
      </property>
   </bean>

   <!--
      # The default AgentNode configuration
      # provides an empty platform definition with JMX support using RMI with registry
      # this platform bean may be set as parent in any other platfom definitions if you want to make use of inheritance
      # other possible properties are:
      * Agents: contains a List of Agents (interface IAgent)
      * EmbeddedBroker: sets an JmsBrokerAMQ (maybe we can introduce a switch wich turns on embedded broker stuff or use a bean for this to be configurable or something) see JMSMessaging.xml for more documentation
      * AgentNodeBeans: a list of AgentNodeBeans
      * ServiceDirectory: sets the ServiceDirectory
      * LoggingConfig: sets the Logging configuration !needs more documentation here!
      * AuthorizationPolicyFilename: sets the file for the java security policy property and activates the security manager
   -->
   <bean name="PlatformWithRegistry" class="de.dailab.jiactng.agentcore.SimpleAgentNode" abstract="true">
      <property name="jmxConnectors">
         <set>
            <map>
               <entry key="protocol" value="rmi" />
               <entry key="registryPort" value="1099" />
            </map>
         </set>
      </property>
   </bean>

   <!--
      # The default AgentNode Spring configuration
      # provides an empty platform definition without JMX support
      # the platform bean may be set as parent in any other platfom definitions 
      
   -->
   <bean name="Platform" class="de.dailab.jiactng.agentcore.SimpleAgentNode" abstract="true"></bean>

	<!-- 
		##############################################################################################
		# Bean providing white pages directory functionality for agents with the DirectoryAccessBean #
		##############################################################################################
	 -->

	 <bean name="DirectoryAgentNodeBean" class="de.dailab.jiactng.agentcore.comm.wp.DirectoryAgentNodeBean" singleton="false"> 
		<property name="messageTransport">
			<ref bean="StandardJMSMessageTransport" />
		</property>
	</bean>

</beans>

