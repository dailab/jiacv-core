<?xml version="1.0"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://cyber888.com/xsd/xdocs.xsd">
	<properties>
		<title>agentCore Documentation</title>
		<author email="marcel.patzlaff@dai-labor.de">Marcel Patzlaff</author>
		<author email="martin.loeffelholz@dai-labor.de">Martin Loeffelholz</author>
	</properties>
	<body>
		<section name="Agent Communication">
			<p>
				AgentCore defines a generic layer for message-based communication. This layer is available in the
				<a href="apidocs/de/dailab/jiactng/agentcore/comm/package-summary.html">
					<code>de.dailab.jiactng.agentcore.comm</code>
				</a>
				and
				<a href="apidocs/de/dailab/jiactng/agentcore/comm/transport/package-summary.html">
					<code>de.dailab.jiactng.agentcore.comm.transport</code>
				</a>
				packages. The following list describes the most essential classes and their functions:
				<ul>
					<li>
						<a href="apidocs/de/dailab/jiactng/agentcore/comm/CommunicationBean.html">
							<code>CommunicationBean</code>
						</a>
						<br />
						The CommunicationBean is an agent component which provides access to the message bus. It can be
						configured with one or more message transports. If no transports are available, then this bean
						cannot do anything.
					</li>
					<li>
						<a href="apidocs/de/dailab/jiactng/agentcore/comm/transport/MessageTransport.html">
							<code>MessageTransport</code>
						</a>
						<br />
						The MessageTransport is an abstract class which defines send and un-/registering primitives for
						the various message busses.
					</li>
					<li>
						<a href="apidocs/de/dailab/jiactng/agentcore/comm/CommunicationAddressFactory.html">
							<code>CommunicationAddressFactory</code>
						</a>
						<br />
						This factory class is the only way to create communication addresses. There are two different
						types of addresses which covers 1:1 (message box) and 1:n (group) communication.
					</li>
				</ul>
			</p>
			<p>
				Currently the message bus in AgentCore, which connects agents (on the same or on remote hosts), is a JMS
				implementation.
			</p>
			<subsection name="Using the CommunicationBean">
				
			</subsection>

			<subsection name="Configuring the Communication">
				<p>
					AgentCore defines some beans for the communication in configuration files. The default setup uses
					the
					<code>StandardJMSBroker</code>
					as bean for the node. It encapsulates the ActiveMQBroker which is in fact our message bus. Client
					access for the agents is granted through the
					<code>CommunicationBean</code>
					definition. The associated <code>StandardJMSMessageTransport</code> 
				</p>
				<p>
					Please take a look in the
					<code>de.dailab.jiactng.agentcore.conf</code>
					folder where the default configuration files are located.
				</p>
			</subsection>
		</section>
	</body>
</document>