<?xml version="1.0"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://cyber888.com/xsd/xdocs.xsd">
  <properties>
    <title>UserManagement Documentation</title>
    <author email="martin.loeffelholz@dai-labor.de">Martin Loeffelholz</author>
  </properties>
  <body>
    <section name="The UserManagementBean"> 
      <p></p>
      <p>This service is meant to provide storage and retrieval abilities from within the Jiac Multi Agent Framework.</p>
      <p>This Bean provide the actions needed for this purpose.</p>
      <p>To do so, this bean uses the models of the UserManagement-Project created by CC-IRML at the dai-lab as pictured here
       <a href="images/um-schema.png">
	      <img src="images/um-schema.png"/>
	     </a>
	  </p>
      
      <subsection name="Configuration of the UserManagementBean">
      <p> The configuration within spring is quite simple. Her is a code Example </p>

<source>
      
<!--
	- Application context for the UserManagementBean
-->

<beans>
      
	<import resource="classpath:de/dailab/jiactng/agentcore/conf/AgentNode.xml" />
	<import resource="classpath:de/dailab/jiactng/agentcore/conf/Agent.xml" />
	<import resource="classpath:de/dailab/jiactng/agentcore/conf/AgentBeans.xml" />

	<bean name="UserManagementPlatform" parent="Platform">
		<property name="loggingConfig"
			value="classpath:de/dailab/basicServices/userManagement/userManagementTestLog4j.properties" />
		<property name="agents">
			<list>
				<ref bean="UserManagerAgent" />
			</list>
		</property>
	</bean>

	<bean name="UserManagerAgent" parent="SimpleAgent" singleton="false">
		<property name="agentBeans">
			<list>
				<ref bean="UserManagementBean" />
			</list>
		</property>
	</bean>
	
	<bean name="UserManagementBean" class="de.dailab.basicServices.userManagement.UserManagementBean" singleton="false">
	</bean>
	
	
</beans>

</source>

      <p> As you can see there is no real configuration necessary for the UserManagementBean within the application-context,
      but you still have to make important configurations in another place. Within the main/resources/um.environment.properties
      file you'll find all you have to configure to make use of the db-connectivity of this bean. <br />
      As an alternative you can configure these settings during the runtime too by first reading the Configuration from the
      DbController class and then modify it. After being finished with that you have to create a new SessionFactory from that
      and set it to the UserManagementBean which will reinitialize with the new settings and use them for the operations ahead. <br />
      Here is a code example for that:
<source>
	Configuration config = DbController.getHibernateConfiguration();

	config.setProperty("hibernate.connection.url", "jdbc:mysql://LocalHost:3306/myUserManagementDataBase");
	config.setProperty("hibernate.connection.username", "Me");
	config.setProperty("hibernate.connection.password", "HeyItsMeIsntIt?");
	
	SessionFactory aVeryNewSessionFactory = config.buildSessionFactory();
	UserManagementBean myUserManagementBean.setSessionFactory(aVeryNewSessionFactory);
</source>
      </p>
      
      </subsection>
      
      <subsection name = "Creating Users">
      	<p>To create</p>
      </subsection>
 
 <!--  
          <a href="images/um-schema.png">
	      <img src="images/um-schema.png"/>
	     </a>
	     

	      <ul>
	        <li>Processor: Intel Centrino Duo 2.00GHz</li>
	        <li>Memory: 1.00GB RAM</li>
	        <li>Operating system: Windows XP Professional 2002 SP2</li>
	        <li>Java version: JRE 1.6.0_03</li>
	      </ul>
	    <table>
	      <tr>
	        <td>Scenario</td>
	        <td>Setup time (ms)</td>
	        <td>Heap memory usage (kB)</td>
	        <td>Non-heap memory usage (kB)</td>
	        <td>Number of live threads</td>
	        <td>Number of loaded classes</td>
	      </tr>
          <tr>
	        <td>JVM without any application</td>
	        <td>-</td>
	        <td>262</td>
	        <td>12395</td>
	        <td>5</td>
	        <td>337</td>
	      </tr>
	      <tr>
	        <td>Agent node without any features</td>
	        <td>765</td>
	        <td>1290</td>
	        <td>15990</td>
	        <td>5</td>
            <td>1313</td>
	      </tr>
	      <tr>
	        <td>Agent node only with one small agent</td>
	        <td>884</td>
	        <td>1373</td>
	        <td>16326</td>
	        <td>7</td>
            <td>1392</td>
	      </tr>
	      <tr>
	        <td>Agent node only with RMI connector</td>
	        <td>1072</td>
	        <td>933</td>
	        <td>16649</td>
	        <td>9</td>
            <td>1550</td>
	      </tr>
	      <tr>
	        <td>Agent node only with communication</td>
	        <td>1327</td>
	        <td>1361</td>
	        <td>17326</td>
	        <td>9</td>
	        <td>1632</td>
	      </tr>
	    </table>
	     -->

    </section>
  </body>
</document>