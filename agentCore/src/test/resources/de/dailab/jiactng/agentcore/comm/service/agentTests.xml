<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
	- Application context definition for "example" DispatcherServlet.
-->
<beans>
	<import resource="classpath:de/dailab/jiactng/agentcore/comm/broker/activeMQBrokerContext.xml"/>

	<bean name="ServiceTestPlatform" class="de.dailab.jiactng.agentcore.SimpleAgentNode">
		<property name="loggingConfig" value="classpath:de/dailab/jiactng/agentcore/comm/service/serviceLog4j.properties" />
		<property name="agentNodeBeans">
			<list>
				<ref bean="ServiceBroker"/>
			</list>
		</property>
		<property name="agents">
			<list>
				<ref bean="Provider" />
				<ref bean="User" />
			</list>
		</property>
	</bean>
	
	<bean name="ServiceBroker" parent="activeMQBroker" singleton="true"/>

	<bean name="Provider" class="de.dailab.jiactng.agentcore.Agent" singleton="false">
		<property name="memory">
			<ref bean="memory" />
		</property>
		<property name="execution">
			<ref bean="simpleExecCycle" />
		</property>
		<property name="agentBeans">
			<list>
				<ref bean="communicationBean" />
				<ref bean="providerServiceBean" />
				<ref bean="providerBean" />
			</list>
		</property>
	</bean>

	<bean name="User" class="de.dailab.jiactng.agentcore.Agent" singleton="false">
		<property name="memory">
			<ref bean="memory" />
		</property>
		<property name="execution">
			<ref bean="simpleExecCycle" />
		</property>
		<property name="agentBeans">
			<list>
				<ref bean="communicationBean" />
				<ref bean="clientServiceBean" />
				<ref bean="clientBean" />
			</list>
		</property>
	</bean>

	<bean name="memory" class="de.dailab.jiactng.agentcore.knowledge.Memory" singleton="false">
		<!--property name="timeOut" value="-1"/-->
	</bean>

	<bean name="clientBean" class="de.dailab.jiactng.agentcore.comm.service.ClientBean" singleton="false" />
	<bean name="clientServiceBean" class="de.dailab.jiactng.agentcore.comm.service.ServiceBean" singleton="false" />

	<bean name="providerBean" class="de.dailab.jiactng.agentcore.comm.service.ProviderBean" singleton="false" />
	<bean name="providerServiceBean" class="de.dailab.jiactng.agentcore.comm.service.ServiceBean" singleton="false">
		<property name="actionTemplates">
			<set>
				<bean class="de.dailab.jiactng.agentcore.action.Action" singleton="false">
					<property name="providerBean">
						<ref bean="providerBean" />
					</property>
				</bean>
			</set>
		</property>
	</bean>

	<bean name="communicationBean" class="de.dailab.jiactng.agentcore.comm.CommunicationBean" singleton="false">
		<property name="transports">
			<set>
				<ref bean="jmsTransport" />
			</set>
		</property>
	</bean>

	<bean name="jmsTransport" class="de.dailab.jiactng.agentcore.comm.transport.jms.JMSMessageTransport"
		singleton="false">
		<constructor-arg type="java.lang.String" value="jms" />
		<property name="connectionFactory">
			<ref bean="connectionFactory" />
		</property>
	</bean>

	<bean name="simpleExecCycle" class="de.dailab.jiactng.agentcore.SimpleExecutionCycle" singleton="false"></bean>
	<bean name="connectionFactory" factory-bean="ServiceBroker" factory-method="createConnectionFactory" singleton="false"/>
</beans>
